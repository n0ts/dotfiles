;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'apropos-mode-abbrev-table '())

(define-abbrev-table 'awk-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'c++-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'c-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'conf-colon-mode-abbrev-table '())

(define-abbrev-table 'conf-javaprop-mode-abbrev-table '())

(define-abbrev-table 'conf-ppd-mode-abbrev-table '())

(define-abbrev-table 'conf-space-mode-abbrev-table '())

(define-abbrev-table 'conf-unix-mode-abbrev-table '())

(define-abbrev-table 'conf-windows-mode-abbrev-table '())

(define-abbrev-table 'conf-xdefaults-mode-abbrev-table '())

(define-abbrev-table 'display-time-world-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'eshell-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("ent" "$v);
" nil 0)
   ))

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'html-helper-mode-abbrev-table '())

(define-abbrev-table 'html-mode-abbrev-table '())

(define-abbrev-table 'idl-mode-abbrev-table '())

(define-abbrev-table 'java-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'message-mode-abbrev-table '())

(define-abbrev-table 'nxml-mode-abbrev-table '())

(define-abbrev-table 'objc-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'php-mode-abbrev-table '())

(define-abbrev-table 'pike-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'ruby-mode-abbrev-table '())

(define-abbrev-table 'select-tags-table-mode-abbrev-table '())

(define-abbrev-table 'sgml-mode-abbrev-table '())

(define-abbrev-table 'sh-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'speedbar-mode-abbrev-table '())

(define-abbrev-table 'sql-mode-abbrev-table
  '(
    ("a" "and" nil 0)
    ("ad" "add datafile" nil 0)
    ("af" "* from" nil 0)
    ("al" "alter" nil 0)
    ("be" "between and " (lambda nil (backward-char 5)) 0)
    ("c" "count(*)" nil 0)
    ("co" "commit" nil 0)
    ("col" "columns" nil 0)
    ("cr" "create" nil 0)
    ("d" "" (lambda nil (insert (format-time-string "'%y-%m-%d'" (current-time)))) 0)
    ("dd" "DBA_DATA_FILES" nil 0)
    ("de" "describe" nil 0)
    ("df" "DBA_FREE_SPACE" nil 0)
    ("dp" "DBA_PROFILES" nil 0)
    ("dr" "DBA_ROLLBACK_SEGS" nil 0)
    ("du" "DBA_USERS" nil 0)
    ("e" "exit" nil 0)
    ("f" "from" nil 0)
    ("g" "group by" nil 0)
    ("ha" "having" nil 0)
    ("i" "insert" nil 0)
    ("inte" "intersect" nil 0)
    ("l" "like" nil 0)
    ("m" "minus" nil 0)
    ("n" "null" nil 0)
    ("o" "order by" nil 0)
    ("q" "quit" nil 0)
    ("r" "rownum<=10" nil 0)
    ("ro" "rollback" nil 0)
    ("s" "select" nil 0)
    ("sh" "show" nil 0)
    ("t" "tablespace" nil 0)
    ("tn" "TABLESPACE_NAME" nil 0)
    ("u" "update" nil 0)
    ("uc" "USER_CONSTRAINTS" nil 0)
    ("ud" "USER_DB_LINKS" nil 0)
    ("ui" "USER_IND_COLUMNS" nil 0)
    ("un" "union" nil 0)
    ("una" "union all" nil 0)
    ("us" "USER_SEGMENTS" nil 0)
    ("uv" "USER_VIEWS" nil 0)
    ("vp" "v$parameter" nil 0)
    ("vsp" "v$system_parameter" nil 0)
    ("w" "where" nil 0)
   ))

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

(define-abbrev-table 'yaml-mode-abbrev-table '())

