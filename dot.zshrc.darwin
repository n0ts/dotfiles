#
# .zshrc for macOS
#
path=( /usr/libexec $path )

alias brew-cask-update='for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || brew cask install $c; done'

# boxen
[ -r "/opt/boxen/env.sh" ] && source /opt/boxen/env.sh

# google-cloud-sdk
if [ -d /opt/google-cloud-sdk ]; then
  path=( /opt/google-cloud-sdk/bin $path )
  source=/opt/google-cloud-sdk/completion.zsh.inc
fi

# mysql
if [ -S "$BOXEN_HOME/data/mysql/socket" ]; then
  if [ ! -h "/tmp/mysql.sock" ]; then
    ln -s $BOXEN_HOME/data/mysql/socket /tmp/mysql.sock
  fi
fi


#
# Homebrew
#
export HOMEBREW_NO_AUTO_UPDATE="1"

if [ -d "/opt/boxen/homebrew" ]; then
  BREW_ROOT=/opt/boxen/homebrew
elif [ -d "/opt/homebrew" ]; then
  BREW_ROOT=/opt/homebrew
else
  BREW_ROOT=/usr/local
fi
ANYENV_ROOT=$HOME/.anyenv
BIN_PATH=$BREW_ROOT/bin

if [ -d "$ANYENV_ROOT" ]; then
  export PATH="$ANYENV_ROOT/bin:$PATH"
  for D in `command ls $ANYENV_ROOT/envs`
  do
    export PATH="$ANYENV_ROOT/envs/$D/shims:$PATH"
  done
fi

function anyenv_init() {
  eval "$(anyenv init - --no-rehash)"
}
function anyenv_unset() {
  unset -f goenv
  unset -f nodenv
  unset -f phpenv
  unset -f pyenv
  unset -f rbenv
}
function goenv() {
  anyenv_unset
  anyenv_init
  goenv "$@"
}
function nodenv() {
  anyenv_unset
  anyenv_init
  nodenv "$@"
}
function phpenv() {
  anyenv_unset
  anyenv_init
  phpenv "$@"
}
function pyenv() {
  anyenv_unset
  anyenv_init
  pyenv "$@"
}
function rbenv() {
  anyenv_unset
  anyenv_init
  rbenv "$@"
}

# curl
[ -x "$BREW_ROOT/opt/curl/bin/curl" ] \
  && path=( $BREW_ROOT/opt/curl/bin $path )

# gnu coreutils
[ -d "$BREW_ROOT/opt/coreutils/libexec/gnubin" ] \
  && path=( $BREW_ROOT/opt/coreutils/libexec/gnubin $path )

# java
[ -d /Library/Java/Home ] \
  && export JAVA_HOME=/Library/Java/Home

# zsh-completions
if [ -d "$BREW_ROOT/opt/zsh-completions/share/zsh-completions" ]; then
  fpath=( $BREW_ROOT/opt/zsh-completions/share/zsh-completions $fpath )
fi

#
# iTerm2 Shell Integration
#
[ -d "$HOME/.iterm2" ] && path=( $HOME/.iterm2 $path )
test -e "$HOME/.iterm2/shell_integration.zsh" && source "$HOME/.iterm2/shell_integration.zsh"
